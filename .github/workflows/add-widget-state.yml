# File: .github/workflows/add-widget-state.yml

name: Embed Widget State into Notebooks

permissions:
  contents: write

on:
  push:
    paths:
      - '**/*.ipynb'
  workflow_dispatch:

jobs:
  embed-widget-state:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: python -m pip install nbformat ipywidgets

      - name: Embed widget state via ipywidgets.embed
        shell: bash
        run: |
          python - << 'PYCODE'
          import os
          import nbformat
          from ipywidgets.embed import embed_widgets

          updated = False
          for root, _, files in os.walk('.'):
              for fname in files:
                  if not fname.lower().endswith('.ipynb'):
                      continue
                  path = os.path.join(root, fname)
                  nb = nbformat.read(path, as_version=4)
                  try:
                      # This will scan every cell, capture each widget's full state,
                      # and write it into metadata.widgets["...widget-state+json"].state
                      nb = embed_widgets(nb)
                  except Exception as e:
                      print(f"❗ Failed to embed widgets in {path}: {e}")
                      continue

                  nbformat.write(nb, path)
                  print(f"✅ Embedded widget state in {path}")
                  updated = True

          if not updated:
              print("ℹ️  No notebooks were modified.")
          PYCODE

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git diff --quiet --exit-code \
            || (git commit -am "chore: embed widget state via ipywidgets.embed" && git push)
